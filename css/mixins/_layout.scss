/* PADDING - @include padding(value); */
@mixin padding($value) {
	@if $value == 'content' {
		padding: ($gutter / 3);
		@include break-min($md-break) {
			padding: ($gutter / 2);
		}
	}
	@if $value == 'side' {
		padding-left : ($gutter / 3);
		padding-right: ($gutter / 3);
		@include break-min($md-break) {
			padding-left : ($gutter / 2);
			padding-right: ($gutter / 2);
		}
	}
	@if $value == 'left' {
		padding-left: ($gutter / 3);
		@include break-min($md-break) {
			padding-left: ($gutter / 2);
		}
	}
	@if $value == 'right' {
		padding-right: ($gutter / 3);
		@include break-min($md-break) {
			padding-right: ($gutter / 2);
		}
	}
	@if $value == 'top' {
		padding-top: $gutter;
		@include break-min($md-break) {
			padding-top: ($gutter * 2);
		}
	}
	@if $value == 'bottom' {
		padding-bottom: $gutter;
		@include break-min($md-break) {
			padding-bottom: ($gutter * 2);
		}
	}
}
/* MARGIN - @include margin(value); */
@mixin margin($value) {
	@if $value == 'row' {
		margin-left : ($gutter / -3);
		margin-right: ($gutter / -3);
		@include break-min($md-break) {
			margin-left : ($gutter / -2);
			margin-right: ($gutter / -2);
		}
	}
	@if $value == 'top' {
		margin-top: ($gutter / 2);
		@include break-min($md-break) {
			margin-top: $gutter;
		}
	}
	@if $value == 'bottom' {
		margin-bottom: ($gutter / 2);
		@include break-min($md-break) {
			margin-bottom: $gutter;
		}
	}
}
/* POSITIONING - @include position(value, position); */
@mixin position($value, $position) {
	@if $value == 'vertical' {
		position         : $position;
		top              : 50%;
		-webkit-transform: translateY(-50%);
		transform        : translateY(-50%);
	}
	@if $value == 'center' {
		position         : $position;
		top              : 50%;
		right            : 50%;
		-webkit-transform: translate(50%, -50%);
		transform        : translate(50%, -50%);
	}
}
